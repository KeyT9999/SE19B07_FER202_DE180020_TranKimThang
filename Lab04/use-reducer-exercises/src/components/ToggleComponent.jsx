// Import React v√† hook useReducer ƒë·ªÉ qu·∫£n l√Ω state d·∫°ng reducer
import React, { useReducer } from 'react';
// Import c√°c component Button, Card t·ª´ th∆∞ vi·ªán react-bootstrap ƒë·ªÉ d√πng UI ƒë·∫πp
import { Button, Card } from 'react-bootstrap';

// 1. Kh·ªüi t·∫°o tr·∫°ng th√°i ban ƒë·∫ßu
// initialState: tr·∫°ng th√°i m·∫∑c ƒë·ªãnh, ·ªü ƒë√¢y ch·ªâ c√≥ thu·ªôc t√≠nh isOn (true/false)
const initialState = { isOn: false };

// 2. ƒê·ªãnh nghƒ©a h√†m reducer
// reducer: h√†m x·ª≠ l√Ω logic chuy·ªÉn ƒë·ªïi tr·∫°ng th√°i d·ª±a tr√™n action
function toggleReducer(state, action) {
  switch (action.type) {
    case 'toggle':
      // N·∫øu action l√† 'toggle', ƒë·∫£o ng∆∞·ª£c tr·∫°ng th√°i isOn
      return { isOn: !state.isOn };
    case 'turn_on':
      // N·∫øu action l√† 'turn_on', ƒë·∫∑t isOn th√†nh true
      return { isOn: true };
    case 'turn_off':
      // N·∫øu action l√† 'turn_off', ƒë·∫∑t isOn th√†nh false
      return { isOn: false };
    default:
      // N·∫øu action kh√¥ng h·ª£p l·ªá, tr·∫£ v·ªÅ state hi·ªán t·∫°i
      return state;
  }
}

function ToggleComponent() {
  // 3. S·ª≠ d·ª•ng useReducer ƒë·ªÉ qu·∫£n l√Ω tr·∫°ng th√°i
  // useReducer tr·∫£ v·ªÅ [state, dispatch]:
  //   - state: tr·∫°ng th√°i hi·ªán t·∫°i
  //   - dispatch: h√†m g·ª≠i action ƒë·ªÉ c·∫≠p nh·∫≠t state
  const [state, dispatch] = useReducer(toggleReducer, initialState);

  // C√°c h√†m x·ª≠ l√Ω action: g·ªçi dispatch v·ªõi type t∆∞∆°ng ·ª©ng
  const toggle = () => dispatch({ type: 'toggle' }); // ƒê·∫£o tr·∫°ng th√°i
  const turnOn = () => dispatch({ type: 'turn_on' }); // B·∫≠t
  const turnOff = () => dispatch({ type: 'turn_off' }); // T·∫Øt

  // ƒê·ªãnh nghƒ©a style cho c√°c n√∫t ƒë·ªÉ d√πng chung
  const buttonStyle = {
    margin: '5px',
    padding: '10px 20px',
    borderRadius: '6px',
    border: 'none',
    cursor: 'pointer',
    fontWeight: 'bold',
    fontSize: '16px'
  };

  // Lu·ªìng ho·∫°t ƒë·ªông:
  // 1) Ng∆∞·ªùi d√πng nh·∫•n n√∫t (toggle/b·∫≠t/t·∫Øt)
  // 2) H√†m handler g·ªçi dispatch g·ª≠i action
  // 3) useReducer g·ªçi toggleReducer ƒë·ªÉ t√≠nh state m·ªõi
  // 4) N·∫øu state thay ƒë·ªïi, component re-render v√† UI c·∫≠p nh·∫≠t
  return (
    // Card: khung ch·ª©a UI, d√πng style ƒë·∫πp c·ªßa react-bootstrap
    <Card style={{ padding: '20px', margin: '20px auto' }}>
      <Card.Header>
        <h2>B·∫≠t/T·∫Øt Tr·∫°ng Th√°i</h2> {/* Ti√™u ƒë·ªÅ */}
      </Card.Header>
      <Card.Body>
        {/* Hi·ªÉn th·ªã tr·∫°ng th√°i hi·ªán t·∫°i v·ªõi m√†u n·ªÅn kh√°c nhau */}
        <div style={{ 
          fontSize: '24px', 
          fontWeight: 'bold',
          padding: '20px',
          backgroundColor: state.isOn ? '#28a745' : '#dc3545', // Xanh n·∫øu b·∫≠t, ƒë·ªè n·∫øu t·∫Øt
          color: 'white',
          borderRadius: '10px',
          textAlign: 'center',
          marginBottom: '20px'
        }}>
          {/* Hi·ªÉn th·ªã icon v√† ch·ªØ theo tr·∫°ng th√°i */}
          {state.isOn ? 'üü¢ B·∫¨T' : 'üî¥ T·∫ÆT'}
        </div>
        
        {/* Nh√≥m n√∫t ƒëi·ªÅu khi·ªÉn tr·∫°ng th√°i */}
        <div>
          {/* N√∫t chuy·ªÉn ƒë·ªïi tr·∫°ng th√°i */}
          <Button
            onClick={toggle}
            style={{ ...buttonStyle, background: '#007bff', color: 'white' }}
          >
            Chuy·ªÉn ƒë·ªïi
          </Button>
          {/* N√∫t b·∫≠t */}
          <Button
            onClick={turnOn}
            style={{ ...buttonStyle, background: '#28a745', color: 'white' }}
          >
            B·∫≠t
          </Button>
          {/* N√∫t t·∫Øt */}
          <Button
            onClick={turnOff}
            style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}
          >
            T·∫Øt
          </Button>
        </div>
      </Card.Body>
    </Card>
  );
}

// Export component ƒë·ªÉ d√πng ·ªü file kh√°c
export default ToggleComponent;